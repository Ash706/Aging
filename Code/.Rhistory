genes3
methods(class = "SummarisedExperiment")
methods(class = "SummarizedExperiment")
?rowData<-
rownames(genes3) <- genes3$uniprotswissprot
genes3 <-getBM(attributes=c('hgnc_symbol', 'entrezgene_id', 'description','uniprotswissprot'),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
rownames(genes3) <- genes3$uniprotswissprot
genes3$uniprotswissprot %>% duplicated()
rowData(Data_se_sel) <- genes3
rowData(Data_se_sel)
genes4 <- genes3 %>% group_by(uniprotswissprot)
library(dplyr)
genes4 <- genes3 %>% group_by(uniprotswissprot)
rowData(Data_se_sel) <- genes4
genes4 <- distinct_at(genes3, uniprotswissprot)
genes3
genes4 <- distinct(genes3, uniprotswissprot)
rowData(Data_se_sel) <- genes4
Data_se_sel
rowData(Data_se_sel)
searchAttributes(mart = ensembl, pattern = "uniprot")
searchAttributes(mart = ensembl, pattern = "protein")
genes3 <-getBM(attributes=c('hgnc_symbol', 'entrezgene_id', 'description','uniprotswissprot', "protein_id"),
filters = 'protein_id',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3 <-getBM(attributes=c('hgnc_symbol', 'entrezgene_id', 'description',"protein_id"),
filters = 'protein_id',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3
genes3 <-getBM(attributes=c('hgnc_symbol', 'entrezgene_id', 'description',"protein_id"),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3
searchAttributes(mart = ensembl, pattern = "protein")
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
filters = listFilters(ensembl)
filters[1:10,]
attributes = listAttributes(ensembl)
attributes[1:15,]
searchAttributes(mart = ensembl, pattern = "protein")
? searchAttributes
searchAttributes(mart = ensembl, pattern = "protein",page= "feature_page")
searchAttributes(mart = ensembl, pattern = "protein",what= "feature_page")
searchAttributes(mart = ensembl, pattern = "protein",what= "feature_page")
searchAttributes(mart = ensembl, pattern = "protein",what= "page")
searchAttributes(mart = ensembl, pattern = "protein","page")
filters
searchFilters(mart = ensembl, pattern = "protein")
searchFilters(mart = ensembl, pattern = "uniprot")
searchFilters(mart = ensembl, pattern = "prot")
genes3 <-getBM(attributes=c('hgnc_symbol', 'entrezgene_id', 'description',"uniprotswissprot"),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3
setwd("/Users/cob-aaf/Documents/Projects/Ageing/Code/")
Data_se_sel <- readRDS("../Data/data_sumExpImputed.rds")
#Data_se_comp <- readRDS("../Data/data_sumExpImputed.rds")
Data_se_sel$Location <- as.factor(Data_se$Location)
Data_se_sel$Gender <- as.factor(Data_se$Gender)
Data_se_sel$Category <- as.factor(Data_se$Category)
Data_se_sel$Age <- as.numeric(Data_se$Age)
Data_se_sel <- Data_se_sel[,Data_se_sel$Age>=40]
rowData(Data_se_sel)
?getBM
genes3 <-getBM(attributes=c('hgnc_symbol',  'description',"uniprotswissprot"),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3
genes3 %>% group_by(uniprotswissprot) %>% summarise()
genes3 %>% group_by(uniprotswissprot) %>% summary()
?group_by
genes3 %>% group_rows(uniprotswissprot)
genes3 %>% group_rows()
rowData(Data_se_sel)
genes3 <-getBM(attributes=c('hgnc_symbol',  'description',"uniprotswissprot", "entrezid"),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
genes3 <-getBM(attributes=c('hgnc_symbol',  'description',"uniprotswissprot", "entrezgene_id"),
filters = 'uniprotswissprot',
values = proteins,
mart = ensembl,
uniqueRows = TRUE
)
rowData(Data_se_sel)[c("entrezgene_id", 'description'),]<- genes3[genes3$uniprotswissprot %in% rownames(Data_se_sel), c("entrezgene_id", 'description')]
genes3[genes3$uniprotswissprot %in% rownames(Data_se_sel), c("entrezgene_id", 'description')]
rowData(Data_se_sel)[c("entrezgene_id", 'description'),]
rowData(Data_se_sel)
rowData(Data_se_sel)[c("entrezgene_id", 'description', 'hgnc_symbol'),]<- genes3[genes3$uniprotswissprot %in% rownames(Data_se_sel), c("entrezgene_id", 'description', 'hgnc_symbol')]
genes3$uniprotswissprot %in% rownames(Data_se_sel)
genes3$uniprotswissprot %in% rownames(Data_se_sel) %>% sum()
rownames(Data_se_sel)
rownames(Data_se_sel) %>% duplicated()
rowData(Data_se_sel)[c("entrezgene_id", 'description', 'hgnc_symbol'),]<- genes3[rownames(Data_se_sel)  %in%genes3$uniprotswissprot , c("entrezgene_id", 'description', 'hgnc_symbol')]
genes3[rownames(Data_se_sel)  %in% genes3$uniprotswissprot , c("entrezgene_id", 'description', 'hgnc_symbol')]
distinct(genes3, uniprotswissprot)
genes4 <-genes3 %>% filter(distinct(uniprotswissprot))
genes4 <-genes3 %>% distinct(uniprotswissprot)
genes4
design_sel <- model.matrix(~1+Data_se_sel$Age)
colnames(design_sel) <- c("(Intercept)", "Age")
fitAgeMain_sel <- lmFit((assays(Data_se_sel)$Loess), design = design)
design_sel <- model.matrix(~1+Data_se_sel$Age)
colnames(design_sel) <- c("(Intercept)", "Age")
fitAgeMain_sel <- lmFit((assays(Data_se_sel)$Loess), design = design_sel)
fitAgeMain_sel <- eBayes(fit = fitAgeMain_sel)
AgeMain_sel <-topTable(fitAgeMain_sel, p.value = 0.05, number = Inf, coef = "Age")
dim(AgeMain_sel)
?enricher
org.Hs.eg.db
AnnotationDbi::colnames()
AnnotationDbi::colnames(org.Hs.eg.db)
AnnotationDbi::colmetanames(org.Hs.eg.db)
rowData(Data_se)
enrichGO(gene          = as.character(genes2$hgnc_symbol),
universe      = as.character(rowData(Data_se)$gene),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 1,
qvalueCutoff  = 01,
readable      = TRUE)
mapIds()
mapIds
keyname(org.Hs.eg.db)
keyname(org.Hs.eg.db)
?keyname
?mapIds
keys(org.Hs.eg.db)
keytypes(org.Hs.eg.db)
select(org.Hs.eg.db, keytype = "UNIPROT")
View(attributes)
keys <- keys(org.Hs.eg.db)
keys
select(hgu95av2.db, keys=proteins, columns = c("SYMBOL","UNIGENE", "UNIPROT"))
select(org.Hs.eg.db, keys=proteins, columns = c("SYMBOL","UNIGENE", "UNIPROT"))
select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL","UNIGENE", "UNIPROT"))
select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL","UNIGENE", "UNIPROT", "ENTREZID"), )
select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL","UNIGENE", "UNIPROT", "ENTREZID") )
select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL", "UNIPROT", "ENTREZID") )
anndb <- select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL", "UNIPROT", "ENTREZID") )
anndb <- select(org.Hs.eg.db, keys=proteins,keytype = "UNIPROT", columns = c("SYMBOL", "UNIPROT", "ENTREZID"),  multiVals="CharacterList")
View(anndb)
anndb2 <- mapIds(hgu95av2.db, keys=keys, column= "ENTREZID", keytype='UNIPROT',
multiVals="CharacterList")
anndb2 <- mapIds(org.Hs.eg.db, keys=keys, column= "ENTREZID", keytype='UNIPROT',
multiVals="CharacterList")
anndb2 <- mapIds(org.Hs.eg.db, keys=proteins, column= "ENTREZID", keytype='UNIPROT',
multiVals="CharacterList")
View(anndb2)
anndb2
anndb2 <- mapIds(org.Hs.eg.db, keys=proteins, column= "ENTREZID", keytype='UNIPROT',
multiVals=first)
anndb2
anndb2 %>% length()
bg <- mapIds(org.Hs.eg.db, keys=proteins, column= "ENTREZID", keytype='UNIPROT',
multiVals=first)
gg
bg
ego <- enrichGO(gene          = as.character(genes2$entrezgene_id),
universe      = bg,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 1,
qvalueCutoff  = 01,
readable      = TRUE)
ego
head(ego)
kk <- enrichKEGG(gene         = as.character(genes2$entrezgene_id),
universe      = bg,
organism     = 'hsa',
pvalueCutoff = 0.05)
kk
head(kk)
ego <- enrichGO(gene          = as.character(genes2$entrezgene_id),
universe      = bg,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 1,
qvalueCutoff  = 0.2,
readable      = TRUE)
head(ego)
mkk <- enrichMKEGG(gene = as.character(genes2$entrezgene_id),
universe      = bg,
organism = 'hsa',
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 2
)
head(mkk)
mkk <- enrichMKEGG(gene = as.character(genes2$entrezgene_id),
universe      = bg,
organism = 'hsa',
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1
)
head(mkk)
general <- enrichr(gene = as.character(genes2$entrezgene_id),
universe      = bg,
organism = 'hsa',
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1
)
head(general)
general <- enricher(gene = as.character(genes2$entrezgene_id),
universe      = bg,
organism = 'hsa',
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1
)
head(general)
general <- enricher(gene = as.character(genes2$entrezgene_id),
universe      = bg,
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1
)
enricher()
?enricher
GSEA()
?GSEA
general <- enricher(gene = as.character(genes2$entrezgene_id),
universe      = bg,
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1, TERM2GENE = hm_gsig,
)
general <- enricher(gene = as.character(genes2$hgnc_symbol),
universe      = rowData(Data_se)$gene,
pvalueCutoff = 0.05,
qvalueCutoff = 1,minGSSize = 1, TERM2GENE = hm_gsig,
)
general
ggbiplot::ggbiplot(pcaobjl)
is.na(assays(Data_se_comp)$imputed) %>% sum()
pcaobjl <- prcomp(x=t(assays(Data_se_comp)$imputed))
percentVarl <- pcaobjl$sdev^2/sum(pcaobjl$sdev^2)
ggbiplot::ggbiplot(pcaobjl)
ggbiplot::ggbiplot(pcaobjl, scale = TRUE)
ggbiplot::ggbiplot(pcaobjl, scale = TRUE, groups =Data_se_comp$Age )
ggbiplot::ggbiplot(pcaobjl, scale = TRUE, groups =Data_se_comp$Location )
ggbiplot::ggbiplot(pcaobjl, scale = TRUE, groups =Data_se_comp$Location, choices = c(1,2))
ggbiplot::ggbiplot(pcaobjl, scale = TRUE, groups =Data_se_comp$Location, choices = c(1,2), labels = "")
pca <- stats::prcomp(assays(Data_se_comp)$imputed)
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = data_autosomal@phdata$population, ellipse = F,
circle = TRUE, var.axes = F) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
pca <- stats::prcomp(assays(Data_se_comp)$imputed)
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
library(ggbiplot)
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
pca <- stats::prcomp(assays(Data_se_comp)$imputed)
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
library(ggbiplot)
pca <- stats::prcomp(t(assays(Data_se_comp)$imputed))
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
print(g)
ggsave(g)
design2_sel <- model.matrix(~1+ Data_se_sel$Gender+ Data_se_sel$Age +Data_se$Location + Data_se_sel$Age*Data_se_sel$Location )
design2_sel <- model.matrix(~1+ Data_se_sel$Gender+ Data_se_sel$Age +Data_se_sel$Location + Data_se_sel$Age*Data_se_sel$Location )
colnames(design2_sel) <- c("(Intercept)", "Gender", "Age", "Location", "AgeLocInt")
fitint_sel <- lmFit((assays(Data_se_sel)$Loess), design = design2_sel)
fitint<- eBayes(fit = fitint)
selressAge <-topTable(fitint_sel, p.value = 0.05, number = Inf, coef = "Age", lfc = 0.01)
design2_sel <- model.matrix(~1+ Data_se_sel$Gender+ Data_se_sel$Age +Data_se_sel$Location + Data_se_sel$Age*Data_se_sel$Location )
colnames(design2_sel) <- c("(Intercept)", "Gender", "Age", "Location", "AgeLocInt")
fitint_sel <- lmFit((assays(Data_se_sel)$Loess), design = design2_sel)
fitint_sel<- eBayes(fit = fitint)
selressAge <-topTable(fitint_sel, p.value = 0.05, number = Inf, coef = "Age", lfc = 0.01)
selressLocation <-topTable(fitint_sel, p.value = 0.05, number = Inf, coef = "Location")
selressGender <-topTable(fitint_sel, p.value = 0.05, number = Inf, coef = "Gender")
selressAgeLoc <-topTable(fitint_sel, p.value = 0.05, number = Inf, coef = "AgeLocInt")
View(selressLocation)
View(selressLocation)
intData_sel <- assays(Data_se_sel)$Loess[rownames(selressAgeLoc),]
png("../Results/RemoveYoung/HeatmapIntsel.png", units = "cm", height = 30, width = 30,res = 300)
pheatmap(t(intData_sel), display_numbers=FALSE, fontsize=7, cluster_cols=FALSE, cluster_rows = TRUE, scale = "column")
dev.off()
png("../Results/RemoveYoung/HeatmapIntsel.png", units = "cm", height = 30, width = 30,res = 300)
pheatmap((intData_sel), display_numbers=FALSE, fontsize=7, cluster_cols=FALSE, cluster_rows = TRUE, scale = "column")
dev.off()
png("../Results/RemoveYoung/HeatmapIntsel.png", units = "cm", height = 30, width = 30,res = 300)
pheatmap((intData_sel), display_numbers=FALSE, fontsize=7, cluster_cols=FALSE, cluster_rows = TRUE, scale = "row")
dev.off()
tDatat2 %>%
gather(key, value, -Age, -Location) %>%
ggplot(aes(x = Age, y = value), color= Location) +
geom_point(color="grey") +
geom_smooth(method = "lm", data = tDatat2v , color="red") +
geom_smooth(method = "lm", data = tDatat2c , color="blue") +
facet_grid(~key, scales = "free")
tDatat2sel <- cbind(as.data.frame(colData(Data_se_sel))[, c("Age", "Location")],t(intData_sel))
tDatat2sel %>%
gather(key, value, -Age, -Location) %>%
ggplot(aes(x = Age, y = value), color= Location) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~key, scales = "free")
tDatat2asel <- tDatat2sel %>%  gather(key, value, -Age, -Location)
tDatat2asel$key <- as.character(tDatat2asel$key)
tDatat2vsel <-  tDatat2vsel %>% filter(Location=="Village") %>%  gather(key, value, -Age, -Location)
tDatat2vsel <-  tDatat2sel %>% filter(Location=="Village") %>%  gather(key, value, -Age, -Location)
tDatat2csel <- tDatat2csel %>% filter(Location=="City") %>%  gather(key, value, -Age, -Location)
tDatat2csel <- tDatat2asel %>% filter(Location=="City") %>%  gather(key, value, -Age, -Location)
int.plot <- function(df, na.rm = TRUE, ...){
# create list of counties in data to loop over
protein_list <- unique(df$key)
for (i in seq_along(protein_list)) {
plot <-
ggplot(subset(df, df$key==protein_list[i]), aes(x = Age, y = value, colour= Location)) +
geom_point(aes(colour = factor(Location)),  size = 3) +
geom_smooth(method = "lm", size=2) +
# geom_smooth(method = "lm", data = tDatat2c , color="blue") +
theme_pander() +
#theme(legend.position="none")   +
scale_y_continuous("Protein Intensity",
limits=c(min(df$value[df$value==protein_list[i]]), max(df$value[df$value==protein_list[i]]))) +
scale_x_continuous("Age in Years") +
ggtitle(paste( protein_list[i],' \n',"Intensity in Location village and city" ,
sep=''))
# save plots as .png
ggsave(plot, file=paste("../Results/Figures/",
protein_list[i], ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
# save plots as .pdf
ggsave(plot, file=paste("../Results/RemoveYoung/",
protein_list[i], ".pdf", sep=''), scale=2,
units = "cm", height = 15, width = 10)
# print plots to screen
print(plot)
}
}
int.plot(tDatat2asel)
library(ggplot2)
tDatat2 <- cbind(as.data.frame(colData(Data_se_comp))[, c("Age", "Location")],t(intData))
tDatat2sel <- cbind(as.data.frame(colData(Data_se_sel))[, c("Age", "Location")],t(intData_sel))
tDatat2sel %>%
gather(key, value, -Age, -Location) %>%
ggplot(aes(x = Age, y = value), color= Location) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~key, scales = "free")
tDatat2asel <- tDatat2sel %>%  gather(key, value, -Age, -Location)
tDatat2asel$key <- as.character(tDatat2asel$key)
tDatat2vsel <-  tDatat2sel %>% filter(Location=="Village") %>%  gather(key, value, -Age, -Location)
tDatat2csel <- tDatat2asel %>% filter(Location=="City") %>%  gather(key, value, -Age, -Location)
int.plot <- function(df, na.rm = TRUE, ...){
# create list of counties in data to loop over
protein_list <- unique(df$key)
for (i in seq_along(protein_list)) {
plot <-
ggplot(subset(df, df$key==protein_list[i]), aes(x = Age, y = value, colour= Location)) +
geom_point(aes(colour = factor(Location)),  size = 3) +
geom_smooth(method = "lm", size=2) +
# geom_smooth(method = "lm", data = tDatat2c , color="blue") +
theme_pander() +
#theme(legend.position="none")   +
scale_y_continuous("Protein Intensity",
limits=c(min(df$value[df$value==protein_list[i]]), max(df$value[df$value==protein_list[i]]))) +
scale_x_continuous("Age in Years") +
ggtitle(paste( protein_list[i],' \n',"Intensity in Location village and city" ,
sep=''))
# save plots as .png
ggsave(plot, file=paste("../Results/Figures/",
protein_list[i], ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
# save plots as .pdf
ggsave(plot, file=paste("../Results/RemoveYoung/",
protein_list[i], ".pdf", sep=''), scale=2,
units = "cm", height = 15, width = 10)
# print plots to screen
print(plot)
}
}
int.plot(tDatat2asel)
library("ggthemes")
library("ggthemes")
tDatat2sel <- cbind(as.data.frame(colData(Data_se_sel))[, c("Age", "Location")],t(intData_sel))
tDatat2sel %>%
gather(key, value, -Age, -Location) %>%
ggplot(aes(x = Age, y = value), color= Location) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~key, scales = "free")
tDatat2asel <- tDatat2sel %>%  gather(key, value, -Age, -Location)
tDatat2asel$key <- as.character(tDatat2asel$key)
tDatat2vsel <-  tDatat2sel %>% filter(Location=="Village") %>%  gather(key, value, -Age, -Location)
tDatat2csel <- tDatat2asel %>% filter(Location=="City") %>%  gather(key, value, -Age, -Location)
int.plot <- function(df, na.rm = TRUE, ...){
# create list of counties in data to loop over
protein_list <- unique(df$key)
for (i in seq_along(protein_list)) {
plot <-
ggplot(subset(df, df$key==protein_list[i]), aes(x = Age, y = value, colour= Location)) +
geom_point(aes(colour = factor(Location)),  size = 3) +
geom_smooth(method = "lm", size=2) +
# geom_smooth(method = "lm", data = tDatat2c , color="blue") +
theme_pander() +
#theme(legend.position="none")   +
scale_y_continuous("Protein Intensity",
limits=c(min(df$value[df$value==protein_list[i]]), max(df$value[df$value==protein_list[i]]))) +
scale_x_continuous("Age in Years") +
ggtitle(paste( protein_list[i],' \n',"Intensity in Location village and city" ,
sep=''))
# save plots as .png
ggsave(plot, file=paste("../Results/Figures/",
protein_list[i], ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
# save plots as .pdf
ggsave(plot, file=paste("../Results/RemoveYoung/",
protein_list[i], ".pdf", sep=''), scale=2,
units = "cm", height = 15, width = 10)
# print plots to screen
print(plot)
}
}
int.plot(tDatat2asel)
ggsave(g, file=paste("../Results/Figures/",
"PCA", ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
View(tDatat2vsel)
View(tDatat2asel)
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F, labels = Data_se_comp$ID) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
ggsave(g, file=paste("../Results/Figures/",
"PCA_lables", ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
pca <- stats::prcomp(t(assays(Data_se_comp)$imputed))
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F, labels = Data_se_comp$ID) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
ggsave(g, file=paste("../Results/Figures/",
"PCA_lables", ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
Data_se_comp$ID
pca <- stats::prcomp(t(assays(Data_se_comp)$imputed))
g <- ggbiplot(pca, obs.scale = 1, var.scale = 1,
groups = Data_se_comp$Category, ellipse = F,
circle = TRUE, var.axes = F, labels = Data_se_comp$`Sample number`) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top') +
theme_bw()
ggsave(g, file=paste("../Results/Figures/",
"PCA_lables", ".png", sep=''),
scale=2,
units = "cm", height = 15, width = 10)
